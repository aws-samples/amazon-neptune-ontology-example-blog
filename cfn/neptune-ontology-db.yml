# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
Description: Base Template to create Neptune Stack inside a VPC
Parameters:
  Env:
    Description: 'Environment tag, e.g. prod, nonprod.'
    Default: test
    Type: String
    AllowedPattern: '[a-z0-9]+'
    MaxLength: 15
  DbInstanceType:
    Description: Neptune DB instance type
    Type: String
    Default: db.r5.large
    AllowedValues:
      - db.t3.medium
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge
    ConstraintDescription: Must be a valid Neptune instance type.
  DBReplicaIdentifierSuffix:
    Description: >-
      OPTIONAL: The ID for the Neptune Replica to use. Empty means no read
      replica.
    Type: String
    Default: ''
  DBClusterPort:
    Type: String
    Default: '8182'
    Description: Enter the port of your Neptune cluster
  NeptuneQueryTimeout:
    Type: Number
    Default: 20000
    Description: Neptune Query Time out (in milliseconds)
  KMSKeyId: 
    Description: The Amazon KMS key identifier for enc of cluster and for S3
    Type: String
  NeptuneBulkLoadBucket:
    Type: String
    Description: S3 Bucket for bulk loading files.
  IamAuthEnabled:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable IAM Auth for Neptune.
Conditions:
  CreateDBReplicaInstance: !Not 
    - !Equals 
      - !Ref DBReplicaIdentifierSuffix
      - ''
  AZ3NotPresent: !Or 
    - !Equals 
      - !Ref 'AWS::Region'
      - ca-central-1
    - !Equals 
      - !Ref 'AWS::Region'
      - us-west-1
  AZ3Present: !Not 
    - !Condition AZ3NotPresent
Resources:
  NeptuneDBSubnetGroup:
    Type: 'AWS::Neptune::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Neptune DB subnet group
      SubnetIds: !If 
        - AZ3NotPresent
        - - !Ref Subnet1
          - !Ref Subnet2
        - - !Ref Subnet1
          - !Ref Subnet2
          - !Ref Subnet3
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  VPCS3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    DependsOn:
      - VPC
    Properties:
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Join 
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPC
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource:
              - '*'
          - Effect: Allow
            Principal: '*'
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey*'
              - 'kms:DescribeKey'
            Resource:
              - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KMSKeyId}

  NeptuneSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow Access
      SecurityGroupIngress:
        - FromPort: !Ref DBClusterPort
          ToPort: !Ref DBClusterPort
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          Description: http access
      SecurityGroupEgress:
        - FromPort: '0'
          ToPort: '0'
          IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: outbound anywhere
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  NeptuneLoadFromS3Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  NeptuneLoadFromS3Policy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: NeptuneLoadFromS3Policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:ListBucket'
            Resource: 
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref NeptuneBulkLoadBucket
                  - /*
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref NeptuneBulkLoadBucket
          - Effect: Allow
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KMSKeyId}
      Roles:
        - !Ref NeptuneLoadFromS3Role
  NeptuneDBClusterParameterGroup:
    Type: 'AWS::Neptune::DBClusterParameterGroup'
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-cluster-parameter-group-description
      Parameters:
        neptune_enable_audit_log: 1
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackName}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackId}'
        - Key: Application
          Value: NeptuneCloudformation
  NeptuneDBParameterGroup:
    Type: 'AWS::Neptune::DBParameterGroup'
    Properties:
      Family: neptune1
      Description: test-cfn-neptune-db-parameter-group-description
      Parameters:
        neptune_query_timeout: !Ref NeptuneQueryTimeout
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  NeptuneDBCluster:
    Type: 'AWS::Neptune::DBCluster'
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      AssociatedRoles: 
        - RoleArn: !GetAtt
          - NeptuneLoadFromS3Role
          - Arn
      DBSubnetGroupName: !Ref NeptuneDBSubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt 
          - VPC
          - DefaultSecurityGroup
        - !Ref NeptuneSG
      DBClusterParameterGroupName: !Ref NeptuneDBClusterParameterGroup
      Port: !Ref DBClusterPort
      IamAuthEnabled: !Ref IamAuthEnabled
      StorageEncrypted: true
      KmsKeyId: !Ref KMSKeyId
      EnableCloudwatchLogsExports: 
        - audit
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
    DependsOn:
      - NeptuneDBSubnetGroup
      - NeptuneDBClusterParameterGroup
  NeptuneDBInstance:
    Type: 'AWS::Neptune::DBInstance'
    Properties:
      DBClusterIdentifier: !Ref NeptuneDBCluster
      DBInstanceClass: !Ref DbInstanceType
      DBParameterGroupName: !Ref NeptuneDBParameterGroup
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
    DependsOn:
      - NeptuneDBCluster
      - NeptuneDBParameterGroup
  NeptuneDBReplicaInstance:
    Type: 'AWS::Neptune::DBInstance'
    Condition: CreateDBReplicaInstance
    Properties:
      DBInstanceIdentifier: !Join 
        - ''
        - - !Ref DBReplicaIdentifierSuffix
          - '-'
          - !Sub '${AWS::StackName}'
      DBClusterIdentifier: !Ref NeptuneDBCluster
      DBInstanceClass: !Ref DbInstanceType
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
    DependsOn:
      - NeptuneDBCluster
      - NeptuneDBInstance
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 172.30.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  FlowLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 10
  VPCFlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowLogRole.Arn
      LogGroupName: FlowLogsGroup
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
    DependsOn:
      - VPC
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 172.30.1.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 0
        - !GetAZs ''
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 172.30.2.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 1
        - !GetAZs ''
  Subnet3:
    Type: 'AWS::EC2::Subnet'
    Condition: AZ3Present
    Properties:
      CidrBlock: 172.30.3.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select 
        - 2
        - !GetAZs ''
  SubnetRTAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - Subnet1
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref Subnet1
  SubnetRTAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    DependsOn:
      - Subnet2
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref Subnet2
  SubnetRTAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Condition: AZ3Present
    DependsOn:
      - Subnet3
      - PrivateRouteTable
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref Subnet3
Outputs:
  DBClusterId:
    Description: Neptune Cluster Identifier
    Value: !Ref NeptuneDBCluster
  DBSubnetGroupId:
    Description: Neptune DBSubnetGroup Identifier
    Value: !Ref NeptuneDBSubnetGroup
  DBClusterResourceId:
    Description: Neptune Cluster Resource Identifier
    Value: !GetAtt 
      - NeptuneDBCluster
      - ClusterResourceId
  DBClusterEndpoint:
    Description: Master Endpoint for Neptune Cluster
    Value: !GetAtt 
      - NeptuneDBCluster
      - Endpoint
  DBInstanceEndpoint:
    Description: Master Instance Endpoint
    Value: !GetAtt 
      - NeptuneDBInstance
      - Endpoint
  DBReplicaInstanceEndpoint:
    Description: ReadReplica Instance Endpoint
    Condition: CreateDBReplicaInstance
    Value: !GetAtt 
      - NeptuneDBReplicaInstance
      - Endpoint
  SparqlEndpoint:
    Description: Sparql Endpoint for Neptune
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - NeptuneDBCluster
          - Endpoint
        - ':'
        - !GetAtt 
          - NeptuneDBCluster
          - Port
        - /sparql
  GremlinEndpoint:
    Description: Gremlin Endpoint for Neptune
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - NeptuneDBCluster
          - Endpoint
        - ':'
        - !GetAtt 
          - NeptuneDBCluster
          - Port
        - /gremlin
  LoaderEndpoint:
    Description: Loader Endpoint for Neptune
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - NeptuneDBCluster
          - Endpoint
        - ':'
        - !GetAtt 
          - NeptuneDBCluster
          - Port
        - /loader
  DBClusterReadEndpoint:
    Description: DB cluster Read Endpoint
    Value: !GetAtt 
      - NeptuneDBCluster
      - ReadEndpoint
  DBClusterPort:
    Description: Port for the Neptune Cluster
    Value: !GetAtt 
      - NeptuneDBCluster
      - Port
  NeptuneLoadFromS3IAMRoleArn:
    Description: IAM Role for loading data in Neptune
    Value: !GetAtt 
      - NeptuneLoadFromS3Role
      - Arn
  PrivateSubnet1:
    Description: Subnet Id
    Value: !Ref Subnet1
  PrivateSubnet2:
    Description: Subnet Id
    Value: !Ref Subnet2
  PrivateSubnet3:
    Condition: AZ3Present
    Description: Subnet Id
    Value: !Ref Subnet3
  VPC:
    Description: VPC
    Value: !Ref VPC
  NeptuneSG:
    Description: Neptune Security Group
    Value: !Ref NeptuneSG
