# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
Description: A template to deploy Neptune Notebooks using CloudFormation resources.
Parameters:
  Env:
    Description: 'Environment tag, e.g. prod, nonprod.'
    Default: test
    Type: String
    AllowedPattern: '[a-z0-9]+'
    MaxLength: 15
  NotebookInstanceType:
    Description: >-
      SageMaker Notebook instance type. Please refer
      https://aws.amazon.com/sagemaker/pricing/ for uptodate allowed instance
      type in aws region and https://aws.amazon.com/neptune/pricing/ for
      pricing.
    Type: String
    Default: ml.t2.medium
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.t3.medium
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.m5d.large
      - ml.m5d.xlarge
      - ml.m5d.2xlarge
      - ml.m5d.4xlarge
      - ml.m5d.12xlarge
      - ml.m5d.24xlarge
      - ml.c4.large
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
    ConstraintDescription: Must be a valid SageMaker instance type.
  NeptuneClusterEndpoint:
    Description: Cluster endpoint of an existing Neptune cluster.
    Type: String
  NeptuneClusterPort:
    Description: 'OPTIONAL: Port of an existing Neptune cluster (default 8182).'
    Type: String
    Default: '8182'
  NeptuneClusterVpc:
    Description: VPC Id of the VPC in which your Neptune cluster is running.
    Type: 'AWS::EC2::VPC::Id'
  NeptuneClusterSubnetId:
    Description: Id of one of the subnets in which your Neptune cluster is running.
    Type: 'AWS::EC2::Subnet::Id'
  NeptuneClientSecurityGroup:
    Description: >-
      OPTIONAL: A VPC security group with access to your Neptune cluster. Leave
      empty only if the Neptune cluster allows access from anywhere.
    Type: String
  NeptuneLoadFromS3RoleArn:
    Description: >-
      ARN of the IAM Role that allows Amazon Neptune to access Amazon S3
      resources.
    Type: String
  StartupScript:
    Description: 'OPTIONAL: Startup script additions for the notebook instance.'
    Type: String
    Default: ''
  BulkLoadS3BucketName:
    Description: >-
      The S3 Bucket copied to from the Notebook instance for uploading to Neptune.
    Type: String
Conditions:
  AddNeptuneClientSecurityGroup: !Not 
    - !Equals 
      - Ref: NeptuneClientSecurityGroup
      - ''
Resources:
  SageMakerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow Access
      VpcId: !Ref NeptuneClusterVpc
  NeptuneNotebookInstance:
    Type: 'AWS::SageMaker::NotebookInstance'
    Properties:
      InstanceType: !Ref NotebookInstanceType
      NotebookInstanceName: !Join 
        - ''
        - - aws-neptune-
          - !Select 
            - '0'
            - !Split 
              - '-'
              - !Ref 'AWS::StackName'
          - '-'
          - !Ref Env
      SubnetId: !Ref NeptuneClusterSubnetId
      SecurityGroupIds: !If 
        - AddNeptuneClientSecurityGroup
        - - !Ref NeptuneClientSecurityGroup
        - - !GetAtt 
            - SageMakerSecurityGroup
            - GroupId
      RoleArn: !GetAtt 
        - ExecutionRole
        - Arn
      LifecycleConfigName: !GetAtt 
        - NeptuneNotebookInstanceLifecycleConfig
        - NotebookInstanceLifecycleConfigName
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  NeptuneNotebookInstanceLifecycleConfig:
    Type: 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    Properties:
      OnCreate:
        - Content: !Base64
            'Fn::Join':
              - ";"
              - - sudo touch /etc/profile.d/jupyter-env.sh
                - !Sub sudo echo "export S3_WORKING_BUCKET=${BulkLoadS3BucketName} " >> /etc/profile.d/jupyter-env.sh
                - sudo initctl restart jupyter-server --no-wait           
      OnStart:
        - Content: !Base64 
            'Fn::Join':
              - ''
              - - |
                  #!/bin/bash
                - |+
                  sudo -u ec2-user -i <<'EOF'

                - |
                  echo "export GRAPH_NOTEBOOK_AUTH_MODE=DEFAULT" >> ~/.bashrc
                - echo "export GRAPH_NOTEBOOK_HOST=
                - !Ref NeptuneClusterEndpoint
                - |
                  " >> ~/.bashrc
                - echo "export GRAPH_NOTEBOOK_PORT=
                - !Ref NeptuneClusterPort
                - |
                  " >> ~/.bashrc
                - echo "export NEPTUNE_LOAD_FROM_S3_ROLE_ARN=
                - !Ref NeptuneLoadFromS3RoleArn
                - |
                  " >> ~/.bashrc
                - echo "export AWS_REGION=
                - !Ref 'AWS::Region'
                - |+
                  " >> ~/.bashrc
                - >
                  aws s3 cp s3://aws-neptune-notebook/graph_notebook.tar.gz
                  /tmp/graph_notebook.tar.gz
                - |
                  rm -rf /tmp/graph_notebook
                - |
                  tar -zxvf /tmp/graph_notebook.tar.gz -C /tmp
                - |
                  /tmp/graph_notebook/install.sh                
                - export S3_WORKING_BUCKET=
                - !Ref BulkLoadS3BucketName
                
                
                - >+

                  aws s3 cp s3://$S3_WORKING_BUCKET/Neptune_Ontology_Example.ipynb 
                  /home/ec2-user/SageMaker/Neptune_Ontology_Example_Orig.ipynb

                - >+

                  cat /home/ec2-user/SageMaker/Neptune_Ontology_Example_Orig.ipynb | 
                  sed s/__S3_BUCKET__/$S3_WORKING_BUCKET/g > /home/ec2-user/SageMaker/Neptune_Ontology_Example.ipynb
                  
                - |
                  EOF
  ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  NeptuneWorkbenchPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: NeptuneWorkbenchPolicy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
              - 's3:*Object'
            Resource: 
              - !Sub arn:aws:s3:::${BulkLoadS3BucketName}/*
              - !Sub arn:aws:s3:::${BulkLoadS3BucketName}
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: 
              - arn:aws:s3:::aws-neptune-notebook/*
          - Effect: Allow
            Action:
              - 'logs:CreateLogDelivery'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DeleteLogDelivery'
              - 'logs:Describe*'
              - 'logs:GetLogDelivery'
              - 'logs:GetLogEvents'
              - 'logs:ListLogDeliveries'
              - 'logs:PutLogEvents'
              - 'logs:PutResourcePolicy'
              - 'logs:UpdateLogDelivery'
            Resource: '*'
      Roles:
        - !Ref ExecutionRole
Outputs:
  NeptuneNotebookInstanceId:
    Value: !Ref NeptuneNotebookInstance
  NeptuneSagemakerNotebook:
    Value: !Join 
      - ''
      - - 'https://'
        - !Select 
          - 1
          - !Split 
            - /
            - !Ref NeptuneNotebookInstance
        - .notebook.
        - !Ref 'AWS::Region'
        - .sagemaker.aws/
  NeptuneNotebookInstanceLifecycleConfigId:
    Value: !Ref NeptuneNotebookInstanceLifecycleConfig